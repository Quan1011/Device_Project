.leaflet-container {
  width: 100%;
  height: 100vh;
  z-index: 1;
}

.leaflet-draw-toolbar a { /* Các phần khác của CSS của bạn */
  font-family: "Font Awesome 5 Free"; /* Sử dụng Font Awesome 5 */
  font-weight: 900; /* Chọn độ đậm của font */
}

  .sr-only {
    display: none;
  }

button{
  cursor: pointer;
}

.container{
  z-index: 2
}

.layers-control{
  z-index: 1000;
  top: 0;
  position: absolute;
  right: 0;
  height: 25px;
  border: 2px solid black;
  background-color: #83af83;
  border-radius: 5px;
}

.radar{
  top: 0;
  left: 0;
  border-radius: 50%;
  --border-size: 3px;
  --border-angle: 0turn;
  --grid-bg: radial-gradient(
    transparent 69%,
    rgb(147, 200, 147) 69%,
    rgb(147, 200, 147) 70%,
    transparent 70%
  );
  --line-bg: transparent 50%, rgb(181, 222, 181) 50%, transparent 50.5%;
  background-image: conic-gradient(from var(--border-angle), transparent 10%, rgba(134, 179, 134, 0.667) 99%, rgb(152, 209, 152) 99.5%), linear-gradient(0deg, var(--line-bg)), linear-gradient(45deg, var(--line-bg)), linear-gradient(90deg, var(--line-bg)), linear-gradient(135deg, var(--line-bg)), var(--grid-bg), var(--grid-bg), var(--grid-bg);
  background-size: cover, cover, cover, cover, cover, 25% 25%, 50% 50%, 75% 75%;
  background-position: center center;
  background-repeat: no-repeat;
  border-radius: 50%;
  border: solid 0.5vmin rgb(145, 183, 145);
  -webkit-animation: bg-spin 3s linear infinite;
          animation: bg-spin 3s linear infinite;
  position: relative;
  filter: drop-shadow(0px 0px 10vmin black) blur(0.5px) contrast(200%);
}
@-webkit-keyframes bg-spin {
  to {
    --border-angle: 1turn;
  }
}
@keyframes bg-spin {
  to {
    --border-angle: 1turn;
  }
}
@-webkit-keyframes move {
  33% {
    transform: translate(25vmin, 10vmin);
  }
  66% {
    transform: translate(15vmin, 30vmin);
  }
  100% {
    transform: translate(0vmin, 0vmin);
  }
}
@keyframes move {
  33% {
    transform: translate(25vmin, 10vmin);
  }
  66% {
    transform: translate(15vmin, 30vmin);
  }
  100% {
    transform: translate(0vmin, 0vmin);
  }
}
.radar::before {
  content: "";
  display: block;
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: solid 1vmin rgb(145, 181, 145);
  -webkit-animation: scale 3s linear infinite;
          animation: scale 3s linear infinite;
}
@-webkit-keyframes scale {
  from {
    transform: scale(0);
  }
  50% {
    transform: scale(1.2);
  }
  51%, 100% {
    opacity: 0;
  }
}
@keyframes scale {
  from {
    transform: scale(0);
  }
  50% {
    transform: scale(1.2);
  }
  51%, 100% {
    opacity: 0;
  }
}

@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}

/* .notification {
  position: absolute;
  top: 80px;
  right: 50px;
  width: 300px;
  padding: 10px;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  margin-bottom: 10px;
}

.notifications {
  display: flex;
  flex-direction: column-reverse;
  align-items: flex-end;
}

.notification p {
  margin: 0;
  color: black;
  font-size: 14px;
} */


/* .notification {
  width: 300px;
  padding: 10px;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  margin-bottom: 10px;
  opacity: 1;
  transition: opacity 0.5s ease-out; 
}

.notification.hide {
  opacity: 0;
  height: 0;
  margin-bottom: 0;
  padding: 0;
}

.notifications {
  position: fixed;
  top: 80px;
  right: 50px;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.notification p {
  margin: 0;
  color: black;
  font-size: 14px;
} */



/* .container {
  height: 100vh;
  width: 100%;
} */

.notifications {
  position: absolute;
  top: 70px;
  right: 50px;
  z-index: 1000;
}

.notification {
  background-color: rgba(125, 0, 0, 0.2);
  color: rgb(21, 0, 255);
  padding: 10px;
  margin: 5px 0;
  border-radius: 5px;
  opacity: 1;
  transition: opacity 0.5s ease-out;
}

.notification.hide {
  opacity: 0;
}
